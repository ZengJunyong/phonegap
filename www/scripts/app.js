// Generated by CoffeeScript 1.6.3
angular.module('Schneider', ['debug', 'ui.router', 'ngTouch', 'kinvey', 'angularLocalStorage', 'ngAnimate', 'ui.select', 'ngSanitize']).config(function($stateProvider, $urlRouterProvider) {
  $urlRouterProvider.otherwise("/login");
  return $stateProvider.state('main', {
    abstract: true,
    templateUrl: 'views/main.html'
  }).state('main.login', {
    url: '/login',
    templateUrl: 'views/login.html'
  }).state('main.home', {
    url: '/home',
    templateUrl: 'views/home.html'
  }).state('main.new', {
    url: '/new',
    templateUrl: 'views/new.html'
  }).state('main.support', {
    url: '/support',
    templateUrl: 'views/support.html'
  }).state('main.contact', {
    url: '/contact',
    templateUrl: 'views/contact.html'
  });
}).run(function($kinvey, $state, global, storage, $rootScope, service, $window) {
  service.init();
  $rootScope.title = 'none';
  $rootScope.$watch('showLeftMenu', function(v) {
    if (v) {
      $rootScope.leftStyle = {
        left: '0px'
      };
      return $rootScope.bodyStyle = {
        left: '200px'
      };
    } else {
      return $rootScope.bodyStyle = {};
    }
  });
  return angular.element($window).on('resize', function() {
    if ($window.innerWidth >= 991) {
      $rootScope.showLeftMenu = false;
      $rootScope.bodyStyle = {};
      return $rootScope.$apply();
    }
  });
}).factory('global', function() {
  return {};
}).factory('swipe', function($rootScope, $interval, $window) {
  return {
    swipeLeft: function() {
      var animate, left;
      if ($window.innerWidth >= 991) {
        return;
      }
      if (!$rootScope.showLeftMenu) {
        return;
      }
      left = 0;
      return animate = $interval(function() {
        var setStyle;
        left += 20;
        setStyle = function() {
          $rootScope.leftStyle = {
            left: '-' + left + 'px'
          };
          return $rootScope.bodyStyle = {
            position: 'absolute',
            overflow: 'hidden',
            left: 200 - left + 'px'
          };
        };
        if (left > 200) {
          left = 200;
          setStyle();
          $interval.cancel(animate);
          $rootScope.bodyStyle = {};
          $rootScope.showLeftMenu = false;
        }
        return setStyle();
      }, 10);
    },
    swipeRight: function() {
      var animate, left;
      if ($window.innerWidth >= 991) {
        return;
      }
      if ($rootScope.showLeftMenu) {
        return;
      }
      left = 200;
      return animate = $interval(function() {
        var setStyle;
        left -= 20;
        setStyle = function() {
          $rootScope.leftStyle = {
            left: '-' + left + 'px'
          };
          return $rootScope.bodyStyle = {
            position: 'absolute',
            overflow: 'hidden',
            left: 200 - left + 'px'
          };
        };
        if (left < 0) {
          left = 0;
          setStyle();
          $interval.cancel(animate);
          $rootScope.bodyStyle = {};
          $rootScope.showLeftMenu = true;
        }
        return setStyle();
      }, 10);
    }
  };
}).factory('service', function($rootScope, $state, $kinvey, storage, global, $interval) {
  return {
    init: function() {
      return $kinvey.init({
        appKey: 'kid_PPFq_GsGri',
        appSecret: '72a342190fed4dc4b8aa601c50564f14',
        sync: {
          enable: true
        }
      }).then(function(activeUser) {
        if (activeUser) {
          $rootScope.login = true;
          $rootScope.name = activeUser.username;
          return $state.go('main.home');
        } else {
          return $state.go('main.login');
        }
      }, function(error) {});
    }
  };
}).controller('MainCtrl', function($scope, $rootScope, $kinvey, global, storage, $state, $interval, swipe) {
  $scope.toggleMenu = function() {
    if (!$rootScope.showLeftMenu) {
      return swipe.swipeRight();
    } else {
      return swipe.swipeLeft();
    }
  };
  $scope.swipeLeft = function() {
    return swipe.swipeLeft();
  };
  $scope.swipeRight = function() {
    return swipe.swipeRight();
  };
  return $scope.logout = function() {
    var promise, user;
    user = $kinvey.getActiveUser();
    if (null !== user) {
      promise = $kinvey.User.logout();
    }
    return promise.then((function(response) {
      delete $rootScope.login;
      delete $rootScope.name;
      return $state.go('main.login');
    }), function(error) {
      return console.log("Kinvey logout Failed. Response: " + error.description);
    });
  };
}).controller('HomeCtrl', function($scope, $kinvey, global, storage, $rootScope, $state) {
  $rootScope.title = 'home';
  if (!$rootScope.login) {
    $state.go('main.login');
  }
  $kinvey.DataStore.find('Control', null, {
    offline: true,
    fallback: false
  }).then(function(data) {
    var d, i, industryOptions, offerOptions, _i, _j, _len, _len1;
    industryOptions = _.uniq((function() {
      var _i, _len, _results;
      _results = [];
      for (_i = 0, _len = data.length; _i < _len; _i++) {
        d = data[_i];
        _results.push(d.industry);
      }
      return _results;
    })());
    $scope.industryOptions = [];
    for (_i = 0, _len = industryOptions.length; _i < _len; _i++) {
      i = industryOptions[_i];
      $scope.industryOptions.push({
        name: i,
        code: i
      });
    }
    $scope.industry = {};
    offerOptions = _.uniq((function() {
      var _j, _len1, _results;
      _results = [];
      for (_j = 0, _len1 = data.length; _j < _len1; _j++) {
        d = data[_j];
        _results.push(d.offer_range);
      }
      return _results;
    })());
    $scope.offerOptions = [];
    for (_j = 0, _len1 = offerOptions.length; _j < _len1; _j++) {
      i = offerOptions[_j];
      $scope.offerOptions.push({
        name: i,
        code: i
      });
    }
    return $scope.offer = {};
  });
  $scope.$watch('industry.selected', function(v) {
    var query;
    if (!v) {
      return;
    }
    query = new $kinvey.Query();
    query.equalTo('industry', v.name);
    return $kinvey.DataStore.find('Control', query, {
      offline: true,
      fallback: false
    }).then(function(response) {
      console.log(response);
      return $scope.memo = response;
    }, function(error) {
      return console.log('Kinvey Getdata Failed. Response: ' + error.description);
    });
  });
  $scope.$watch('offer.selected', function(v) {
    var query;
    if (!v) {
      return;
    }
    query = new $kinvey.Query();
    query.equalTo('offer_range', v.name);
    return $kinvey.DataStore.find('Control', query).then(function(response) {
      return $scope.memo2 = response;
    }, function(error) {
      return console.log('Kinvey Getdata Failed. Response: ' + error.description);
    });
  });
  return $scope["export"] = function() {
    return $kinvey.DataStore.find('Control').then(function(data) {
      var blob, d, execldata, exportdata, row, template, wrap, _i, _len;
      execldata = '';
      for (_i = 0, _len = data.length; _i < _len; _i++) {
        d = data[_i];
        row = '<Row>';
        wrap = function(value) {
          row += '<Cell><Data ss:Type="String">';
          row += value;
          return row += '</Data></Cell>';
        };
        wrap(d.industry);
        wrap(d.offer_range);
        wrap(d.application);
        wrap(d.country);
        wrap(d.customer);
        wrap(d.competition);
        wrap(d.contact_1);
        wrap(d.key_success_1);
        wrap(d.key_success_2);
        wrap(d.key_success_3);
        wrap(d._filename);
        row += '</Row>';
        execldata += row;
      }
      template = "<?xml version=\"1.0\"?><Workbook xmlns=\"urn:schemas-microsoft-com:office:spreadsheet\" xmlns:o=\"urn:schemas-microsoft-com:office:office\" xmlns:x=\"urn:schemas-microsoft-com:office:excel\" xmlns:ss=\"urn:schemas-microsoft-com:office:spreadsheet\" xmlns:html=\"http://www.w3.org/TR/REC-html40\"><DocumentProperties xmlns=\"urn:schemas-microsoft-com:office:office\"><Version>14.0</Version></DocumentProperties><OfficeDocumentSettings xmlns=\"urn:schemas-microsoft-com:office:office\"><AllowPNG/></OfficeDocumentSettings><ExcelWorkbook xmlns=\"urn:schemas-microsoft-com:office:excel\"><WindowHeight>8540</WindowHeight><WindowWidth>21140</WindowWidth><WindowTopX>240</WindowTopX><WindowTopY>120</WindowTopY><ProtectStructure>False</ProtectStructure><ProtectWindows>False</ProtectWindows></ExcelWorkbook><Styles><Style ss:ID=\"Default\" ss:Name=\"Normal\"><Alignment ss:Vertical=\"Bottom\"/><Borders/><Font/><Interior/><NumberFormat/><Protection/></Style></Styles><Worksheet ss:Name=\"Sample Sheet 1\"><Table ID=\"Table1\"><Row><Cell><Data ss:Type=\"String\">Industry</Data></Cell><Cell><Data ss:Type=\"String\">Offer</Data></Cell><Cell><Data ss:Type=\"String\">Application</Data></Cell><Cell><Data ss:Type=\"String\">Country</Data></Cell><Cell><Data ss:Type=\"String\">Customer</Data></Cell><Cell><Data ss:Type=\"String\">Competition</Data></Cell><Cell><Data ss:Type=\"String\">Contact</Data></Cell><Cell><Data ss:Type=\"String\">Key success 1</Data></Cell><Cell><Data ss:Type=\"String\">Key success 2</Data></Cell><Cell><Data ss:Type=\"String\">Key success 3</Data></Cell><Cell><Data ss:Type=\"String\">Filename</Data></Cell></Row>#</Table></Worksheet></Workbook>";
      exportdata = template.replace("#", execldata);
      blob = new Blob([exportdata], {
        type: "application/vnd.ms-excel;charset=utf-8"
      });
      return saveAs(blob, "appliction.xls");
    });
  };
}).controller('LoginCtrl', function($scope, $kinvey, $state, $rootScope, service) {
  return $scope.login = function() {
    var name, password;
    name = $scope.name, password = $scope.password;
    return $kinvey.User.login(name, password).then(function(response) {
      return service.init();
    }, function(error) {
      return console.log('Kinvey Login Failed. Response: ' + error.description);
    });
  };
}).controller('NewCtrl', function($scope, $kinvey, $state, $rootScope) {
  $rootScope.title = 'new';
  if (!$rootScope.login) {
    $state.go('main.login');
  }
  return $scope.save = function() {
    var fileContent, patten;
    fileContent = document.getElementById("input").files[0];
    if (!$scope.f1.$valid || !$scope.f2.$valid) {
      alert('Fields marked with * are required.');
      return;
    }
    patten = /[\w._-]{1,}/;
    if (!fileContent) {
      alert('Fields marked with * are required.');
      return;
    }
    if ((fileContent.name.split(patten)).length > 2) {
      alert('Filename Error: only A-z, 0-9, hyphens, underscores and periods allow! ');
      return;
    }
    $scope.uploading = true;
    return $kinvey.File.upload(fileContent, {
      _filename: fileContent.name,
      _acl: {
        "gr": true
      },
      mimeType: fileContent.type,
      "public": true,
      size: fileContent.length
    }).then(function(file) {
      var application, competition, contact, country, customer, industry, key_success_1, key_success_2, key_success_3, offer_range, _filename, _ref;
      _filename = file._filename;
      _ref = $scope.form, industry = _ref.industry, offer_range = _ref.offer_range, country = _ref.country, customer = _ref.customer, competition = _ref.competition, contact = _ref.contact, key_success_1 = _ref.key_success_1, key_success_2 = _ref.key_success_2, key_success_3 = _ref.key_success_3, application = _ref.application;
      return $kinvey.DataStore.save('Control', {
        industry: industry,
        offer_range: offer_range,
        country: country,
        customer: customer,
        competition: competition,
        contact: contact,
        key_success_1: key_success_1,
        key_success_2: key_success_2,
        key_success_3: key_success_3,
        application: application,
        _filename: _filename
      }).then(function(response) {
        $scope.uploading = true;
        alert('Saved successfully');
        return delete $scope.form;
      });
    });
  };
}).controller('SupportCtrl', function($scope, $kinvey, $state, $rootScope) {
  return $rootScope.title = 'support';
}).controller('ContactCtrl', function($scope, $kinvey, $state, $rootScope) {
  return $rootScope.title = 'contact';
}).directive('detail', function($timeout, $kinvey, $document) {
  return {
    restrict: 'E',
    scope: {},
    templateUrl: 'prompt.html',
    link: function(scope, element) {
      var div, fadePromise, m, promise, query, showPromise, span;
      m = scope.m = scope.$parent.m;
      query = new $kinvey.Query();
      query.equalTo('_filename', m._filename);
      promise = $kinvey.File.find(query);
      promise.then(function(file) {
        scope.m.url = file[0]._downloadURL;
        return console.log(m.url);
      });
      span = element.find('span');
      showPromise = fadePromise = null;
      div = element.find('div');
      $document = angular.element($document);
      return $document.on('click', function(e) {
        if (e.target === span[0]) {
          scope.showPrompt = !scope.showPrompt;
        } else if (e.target === div[0]) {
          scope.showPrompt = true;
        } else {
          scope.showPrompt = false;
        }
        return scope.$apply();
      });
    }
  };
}).directive('hideMenu', function($rootScope, swipe) {
  return function(scope, element) {
    return element.on('click', function() {
      return swipe.swipeLeft();
    });
  };
});
